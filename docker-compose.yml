services:
  # Redis service for rate limiting
  redis:
    image: redis:7-alpine
    container_name: tiktok-api-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # TikTok API Backend service
  tiktok-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tiktok-api-backend
    restart: unless-stopped
    ports:
      - "9010:8000"
    environment:
      # API Configuration
      - API_KEYS=${API_KEYS:-your-api-key-1,your-api-key-2}

      # TikTok Configuration
      - MS_TOKENS=${MS_TOKENS:-ms_token_1,ms_token_2}

      # Rate Limiting
      - REDIS_URL=redis://redis:6379
      - RATE_LIMIT_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-100}

      # Environment
      - ENVIRONMENT=${ENVIRONMENT:-production}

      # FastAPI Configuration
      - APP_TITLE=${APP_TITLE:-TikTok API Backend}
      - APP_DESCRIPTION=${APP_DESCRIPTION:-A FastAPI backend for TikTok API interactions}
      - APP_VERSION=${APP_VERSION:-1.0.0}

      # TikTok API Configuration
      - TIKTOK_BROWSER=${TIKTOK_BROWSER:-chromium}
      - TIKTOK_SLEEP_AFTER=${TIKTOK_SLEEP_AFTER:-3}
      - TIKTOK_NUM_SESSIONS=${TIKTOK_NUM_SESSIONS:-1}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      # Mount for development (optional)
      - ./app:/app/app:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: tiktok-api-network
