name: Build and Deploy TikTok API

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  DOCKER_IMAGE: tiktok-api
  DOCKER_TAG: latest

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy docker-compose file to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: "docker-compose.prod.yml"
          target: "/opt/tiktok-api/"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            # Navigate to deployment directory
            cd tiktok-api

            # Set environment variables for docker-compose
            export DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
            export API_KEYS="${{ secrets.API_KEYS }}"
            export MS_TOKENS="${{ secrets.MS_TOKENS }}"
            export LOG_LEVEL="INFO"

            # Pull latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest

            # Stop and remove existing containers
            docker-compose -f docker-compose.prod.yml down || true

            # Start services with docker-compose
            docker-compose -f docker-compose.prod.yml up -d

            # Wait for health check
            sleep 15

            # Check if containers are running
            if docker ps | grep -q tik-tok-api-backend; then
              echo "✅ Deployment successful!"
              echo "Running containers:"
              docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
              echo "API container logs:"
              docker logs --tail 20 tik-tok-api-backend
            else
              echo "❌ Deployment failed!"
              echo "Container status:"
              docker ps -a | grep tik-tok
              echo "API container logs:"
              docker logs tik-tok-api-backend
              exit 1
            fi

      - name: Health Check
        run: |
          sleep 30
          curl -f http://${{ secrets.SERVER_HOST }}:9010/health || exit 1
